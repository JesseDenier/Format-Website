<!--?xml version='1.0' encoding='UTF-8'?--><!DOCTYPE html><html xml:lang="en-us" lang="en-us" xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops"><head>
    <link rel="stylesheet" type="text/css" href="../../../css/base.css" />
<link rel="stylesheet" type="text/css" href="../../../css/kotobeeInteractive.css" />
<link rel="stylesheet" type="text/css" href="../../../css/global.css" />

    <script type="text/javascript" src="../../../js/kotobeeInteractive.js"></script>
<script type="text/javascript" src="../../../js/global.js"></script>

    <title>2 Fundamentals of Wind Energy</title>
    

<meta charset="utf-8" />
 <meta name="kotobee-chapter" content="epubpyv0j/OEBPS/CITF_IS_CC_Ch02_2E_1st_for_reflowable_export-2.xhtml" />
<meta name="kotobee-book" content="urn:uuid:a5b0b5b6-fa1b-3ee3-182a-cfbab04b9eb4" />
</head>
<body id="CITF_IS_CC_Ch02_2E_1st_for_reflowable_export-2">
<div class="kInteractive container container562" data-kotobee="Tlg2SlBXFldGREdGUkpAWUpGXU5AVxdDDRoVHEpAWVVRXVALCktAREdGREpAWRsNHwdAVxcfREdGCyoKGw4aC0dXVwkAU0cZCR0VAgFRXVBfUAkAU0cECQsWAgETSlBXXxQVTVBGWg0dGQsRHTAEAUxQElBGWlVBR0pGXQAKF0FAEyIdDBsaTl1GVUdXVxUAU0dYTV1ACQAGCwcXJkpJDgdRWl1ITl1GTAMEBEREAFBGWkNXWV0WCCEKCUpXREdGUkpAWUxEX1JVVRUAU0dYTV1ACQg7HwMGDFFcREdGUl5eTl1GDA0JClcAU0dOTV1ASFxHXFFWVgAXU1lRWl0WAhwVDQ4AMldEETMbGiIdCQYYCkdXVx9REwARREpAWQsdAkdXVx9LFBkYREpAWQwYDhEWC0RIBFBGWlVXWV0XAAwRBExLBAdBXl1XWV1RWCY=" style="color: rgb(51, 51, 51); width: 100%; height: 60px; margin: 5px auto; clear: both; padding: 0px; border-radius: 3px; border-width: 0px; border-color: rgb(170, 170, 170); background-color: rgb(0, 0, 0);">
<div class="kbContent" style="padding: 10px;">
<h1><span style="font-size:1.00em"><span style="color:#FFFFFF">SECTION 2</span></span></h1>
</div>




</div>

<h2><span style="font-size:1.29em">Fundamentals of Wind Energy</span></h2>

<p>Wind energy is a renewable and sustainable power source harnessed from the kinetic energy of the wind. This form of energy has been utilized for centuries, dating back to the use of windmills for grinding grains and pumping water. The basic principle behind wind energy is the conversion of kinetic energy from the wind into mechanical energy through the use of wind turbines. These turbines consist of blades mounted on a rotor, which spins when the wind blows.</p>

<div class="kInteractive container container987" data-kotobee="Tlg2SlBXFldGREdGUkpAWUpGXU5AVxdDDRoVHEpAWVVRXVAXDEJNFVBGWkNXWV0AFhIAQBcXW1BGWgw3Ex8VAQZAVxcJREdGBQ4ADAYaSlBXXxcVTVBGWh8TDwsdAQVAVxcfDwAYBENXWV0WABABAFd3ABEdHRxXWV1OXE5AVxdHDgcQDR0lAgsAB0dXVx8AU0dETV1AR0pGXQAKF0FAEzYbBAAATl1GVUdXVwZEABQVCQ5XWV1YSlBXB0JmDhkbGkpAWVVRXVBGA0NDBxMSTV1AR0pGXQACKlVEAhwAEUpAWVVFQ0dXV0ZKDRoGTV1AUUpGXUFWVhYWUkZRWl1eTl1GCwsWBEdJBCIGCR80BB05AAAMCUAAU0dOHB0HDkNRXVABDEgAU0dOBhoeB0NRXVAGCURWEhsVBQpXWV1OSlBXBkpLFRQdBgoAUldDSlBXQBJh" style="color: rgb(51, 51, 51); width: 40%; height: auto; margin: 20px; clear: none; float: right; padding: 0px; border-radius: 3px; border-width: 0px; border-color: rgb(170, 170, 170); background-color: rgb(255, 255, 255);">
<div class="kbContent">
<p><a class="kInteractive link link11" data-kotobee="Tlg2SlBXEVdEDwYECR0XBQwNSlBXXxAVTVBGWg0GBSwbAw0XQBcXW1BGWkxAXgpNClBAVxcJREdGHBYCDkpGXVhAVxdVDgUBGEpAWUNRXVAVClVQETgbDApXWV1OSlBXDEhEBhBRWl1eTl1GHw0VEFVsDBJRWl1ITl1GQUxKSwsKT1tbAQIVGEADBgwBVAtPERJRWl1XXCs=" href=""><img class="kInteractive image image29 ckSelected" data-kotobee="Tlg2SlBXDEhCREdGUgEHBwNYSlBXB0BNAAMdBx1XWV1OSlBXC0pLBFBGWkNXWV0SAw0EEQAXU09RWl0cBAERSlBXSQAXUxgVGggbBUpGXVgLEElJTVBGWh8dGxoESlBXX0NEDQYRREpAWR8bHxcVNkxfBFBGWlVXWV0YDhACAAAXU1lRWl0WAhwVDQ4AMldEETMbGiIdCQYYCkdXVx9REwARREpAWRsNHwdAVxcfREdGDgYeDkpGXU5AVxdGDRQHGwETBgpRXVBfQBcXCBgVDwpAUkpGXU5AVxdBCBhRWl1IBRoYA05AVxdAGRwHHBw7BSIRCwsEKUxHExQGEUpAWVUSDg4WAAkAU0cHHBYeDkpGXVgLEElJTVBGWgYfDDASBg4AC0RIBFBGWlUcHgMYQ0dXV1ZXAlBGWlUcHgMYQ0dXV1VEFR1RWl1ITl1GQUxKSwsKT1tbAQIVGEADBgwBVAtPERJRWl1eTl1GGwsRCUAAU0dOTV1APAYaC0dXVXFQExcdBgpXWV1RWCY=" src="../../../imgs/wind1.jpg" style="margin-right: auto; margin-left: auto; position: static;" title="Wind Turbine" /></a></p>

<p><span style="color:#B22222"><strong>FIGURE 3&#160;&#160;</strong></span><em>Wind Turbine</em></p>
</div>




</div>

<p>The kinetic energy transferred to the rotor is then converted into electrical energy through a generator. This process involves the rotation of a magnetic field within the generator, inducing an electric current that can be harnessed for various applications. Wind energy is classified into two main types: onshore and offshore wind power. Onshore wind farms are situated on land, while offshore wind farms are located in bodies of water, typically oceans. Site selection is a critical aspect of wind energy projects. Factors such as wind speed, consistency, and direction play a vital role in determining the efficiency and viability of a wind farm. Additionally, environmental impact assessments are conducted to minimize ecological disruption. Wind speed is a fundamental parameter influencing the amount of energy a wind turbine can generate. Higher wind speeds result in greater kinetic energy, leading to increased electricity production. As a result, windy locations are preferred for the installation of wind farms. Wind turbines are available in various designs, with horizontal-axis and vertical-axis turbines being the most common. Horizontal-axis turbines are the traditional three-blade structures, while vertical-axis turbines have blades that rotate around a central axis, resembling an eggbeater.</p>

<div class="kInteractive container container84" data-kotobee="Tlg2SlBXFldGREdGUkpAWUpGXU5AVxdDDRoVHEpAWVVRXVALCktAREdGREpAWRsNHwdAVxcfREdGCyoKGw4aC0dXVwkAU0cZCR0VAgFRXVBfUAkAU0cECQsWAgETSlBXX0tQDRlYTV1ACQAGCwcXN0RBCAAHTV1AUVxYSlBXB0pXBRAGPwYWHwdRXVBfQBcXUVBGWkNXWV0WABABAFdmDhkbGkpAWVVRXVBGBEREABQVTV1AR0pGXQACJkpJDgdRWl1ITl1GTAQDA0NDB1BGWkNXWV0WCC0VBEZMFQxRWl1IWkNRXVAGCklKE1BGWlVXWV1XXFFWVhYWREdGREpAWQsdHAMHCUByExQELgAAJgAWBg4AQBcXWwEGHQpeTl1GCwsIQBcXWxsBBANeTl1GDA4EFlZLABgRTV1AUUpGXQEKC1FECBsRGldGTl1GSlUh" style="color: rgb(51, 51, 51); width: 80%; height: auto; margin: 5px auto; clear: both; padding: 0px; border-radius: 3px; border-width: 0px; border-color: rgb(170, 170, 170); background-color: rgb(255, 255, 255);">
<div class="kbContent">
<div class="kInteractive widget widget785" data-kotobee="Tlg2SlBXFldGREdGUkpAWQYaCwcdS01RDBlRWl1eTl1GAg0BAAAXU09RWl0CCggRSlBXSQAXUwIdDBsaTl1GVVNVVQkAU0cDAQsGAzoaBhZAVxcfREdGTV1HTl1GQ0dXV01ACBIcHEpAWVVDWVpJQBcXAxAcCRkbBB1RXVBfQBcXDxoaDUpAWUNRXVADCUpEFVBGWlVXWV0aAAwAQBcXTVBGWh8dGEpGXVhAVxdWCBERTV1AR0pGXQ8EF0JMD1BGWlVXWV1BSlBXSQAXUwUbGBoCTl1GVRYXEEAJREdGBx8GAgAaHEdXVx8AVjdRWl0dCQURDBYME0AAU0dOBhoeB0pDK05AVxdBCBYATV1AUUpDLUdXV0ZJDgYRTV1AUUpGXSEJClZAREdGTVg2R0pGXQEJBFZWDxQZDUpAWVVRXVASDEFCBAFDUFpXWV1YSlBXBEtEDQwHARxXWV1OSlUnQBcXFhQdHEpAWVUaGg4JQBJhTVBGWgETBgpRXVBfQBcXFhwaDBsHGQ0dAQcEC0RRDhgNWF5cEQYESlBXSQAXUxwaHAoACgwABg0LQBcXWwEGHQpeTl1GHwMRDQAXU09RWl1cRUBaQU1LSwpPEloDAQsVDhsHSlBXSQAXUxwXBwEiChscSlBXX0tQDRlRXys=" id="ki-wdgt-9437" style="width: 100%; height: 768px; margin: 5px auto;"></div>

<p><span style="color:rgb(178, 34, 34); font-size:1em"><strong>FIGURE 4&#160;&#160;</strong></span><em style="font-size:1em">Wind Turbine Anatomy</em></p>
</div>




</div>

<p>&#160;</p>

<p><a class="kInteractive link link510" data-kotobee="Tlg2SlBXEVdEDwYECR0XBQwNSlBXXxAVTVBGWg0GBSwbAw0XQBcXW1BGWkxAXgpNClBAVxcJREdGHBYCDkpGXVhAVxdVDgUBGEpAWUNRXVAIFkIAU0dOTV1ATlw3H0dWIHVXCBoGARsbEQpRXVIRF0RLEgUVGgocH0pGXwEKCEhQDxwXCRsbBAFRXVIEC0EAU0UXBwMeCg0bHQMRDEpLREdEHwcXBUpGXwYMFkZQEgYdBghXWV8DBgwBQBcVBBsRGggLTl1EHxAKD0BGFQZaTV1CIgECAA4TDEtCREdEGxsTAAocAA4BAFdWREdEDh0dBkpGXxQEF0xKFAZRWl8UAgoYCxFAVxVADwYBGgoBTl1EDg4JQBcVERAGGx8XCBsdGQcWQBcVAAcRTV1CCAAaHAsBAFdABVlRWl8UBBwAChAMC0IAU0UVTV1CGwAHBhYME0AAU0UDBx0ZAgETSlBVAEtTCAcbBgIXBRtaSlEmSlUAUjBRXSwcTl1GQ0dXV1VKEQAEJQAWDkpGXVhAVxdRBA0ATV1ATlgw" href=""><img class="kInteractive image image931" data-kotobee="Tlg2SlBXDEhCREdGUgEHBwNYSlBXB0BNAAMdBx1XWV1OSlBXC0pLBFBGWkNXWV0SAw0EEQAXU09RWl0AAggcG0dXVwkAU0cZCR0VAgFRXVBfVxUJREdGGAACHh9RXVBfA0RJEhBYTV1AGwAEGhI2DF9AREdGUkpAWQIRCwsQCAAXU1lRWl0WAhwVDQ4AMldEETMbGiIdCQYYCkdXVx9DABkHDUNXWV0AFhIAQBcXW1BGWgkbBwpRXVBJQBcXAhkVGxwcCgIRSlBXXwAXUxwZCQgXUlxFSlBXSQAXUxEdBUpAWVUaGg4JSQAXUxAMARwGGCYaIgcBDERpCBcGCR0LTl1GVQQECVZATVBGWhwGEgMRSlBXX0tQDRlYTV1AAgITMAQMCUBLABgRTV1AUQEBAw5JQBcXEgcXTV1AUQEBAw5JQBcXERQAAEpAWVVRXVBLSwoLT1paRkAbBggHQBYMFVVXDgEbCwAeDgERHQUcS1VLBlBGWkpFLw==" src="../../../imgs/tipprotocolenergy.png" style="margin: 20px; position: static; clear: none; float: right;" /></a>The capacity factor is a crucial metric in assessing the performance of a wind turbine or wind farm. It represents the actual output of the turbine relative to its maximum potential output, providing insights into its efficiency. Wind energy is intermittent, meaning it is dependent on wind availability.</p>

<div class="_idGenObjectLayout-1">
<h3>Challenges and Considerations:</h3>

<ul>
	<li><strong>Intermittency:</strong> The variability of wind poses challenges in maintaining a consistent power supply. Complementary energy sources or storage solutions are essential to address this issue.</li>
	<li><strong>Aesthetic Concerns:</strong> Wind turbines' visual impact on landscapes can be a point of contention. Striking a balance between renewable energy goals and preserving the visual appeal of natural settings is a consideration in project planning.</li>
	<li><strong>Wildlife Impact:</strong> Wind farms may pose risks to birds and bats. Research and mitigation strategies are crucial to minimize the impact on local wildlife.</li>
	<li><strong>Noise Pollution:</strong> The audible noise generated by wind turbines can be a concern for nearby residents. Technological advancements aim to reduce noise levels and address community concerns.</li>
	<li><strong>Land Use:</strong> Wind farms require significant land allocation. Balancing the need for renewable energy with competing land uses, such as agriculture or conservation, is a key consideration.</li>
</ul>
</div>

<div class="kInteractive container container987" data-kotobee="Tlg2SlBXFldGREdGUkpAWUpGXU5AVxdDDRoVHEpAWVVRXVAXDEJNFVBGWkNXWV0AFhIAQBcXW1BGWgw3Ex8VAQZAVxcJREdGBQ4ADAYaSlBXXxcVTVBGWh8TDwsdAQVAVxcfDwAYBENXWV0WABABAFd3ABEdHRxXWV1OXE5AVxdHDgcQDR0lAgsAB0dXVx8AU0dETV1AR0pGXQAKF0FAEzYbBAAATl1GVUdXVwZEABQVCQ5XWV1YSlBXB0JmDhkbGkpAWVVRXVBGA0NDBxMSTV1AR0pGXQACKlVEAhwAEUpAWVVFQ0dXV0ZKDRoGTV1AUUpGXUFWVhYWUkZRWl1eTl1GCwsWBEdJBCIGCR80BB05AAAMCUAAU0dOHB0HDkNRXVABDEgAU0dOBhoeB0NRXVAGCURWEhsVBQpXWV1OSlBXBkpLFRQdBgoAUldDSlBXQBJh" style="color: rgb(51, 51, 51); width: 40%; height: auto; margin: 20px; clear: none; float: right; padding: 0px; border-radius: 3px; border-width: 0px; border-color: rgb(170, 170, 170); background-color: rgb(255, 255, 255);">
<div class="kbContent"><a class="kInteractive link link740" data-kotobee="Tlg2SlBXEVdEDwYECR0XBQwNSlBXXxAVTVBGWg0GBSwbAw0XQBcXW1BGWkxAXgpNClBAVxcJREdGHBYCDkpGXVhAVxdVDgUBGEpAWUNRXVAVClVQETgbDApXWV1OSlBXDEhEBhBRWl1eTl1GHw0VEFVsDBJRWl1ITl1GQUxKSwsKT1tbAQIVGEADBgwBVgtPERJRWl1XXCs=" href=""><img class="kInteractive image image29" data-kotobee="Tlg2SlBXDEhCREdGUgEHBwNYSlBXB0BNAAMdBx1XWV1OSlBXC0pLBFBGWkNXWV0SAw0EEQAXU09RWl0cBAERSlBXSQAXUxgVGggbBUpGXVgLEElJTVBGWh8dGxoESlBXX0NEDQYRREpAWR8bHxcVNkxfBFBGWlVXWV0YDhACAAAXU1lRWl0WAhwVDQ4AMldEETMbGiIdCQYYCkdXVx9REwARREpAWRsNHwdAVxcfREdGDgYeDkpGXU5AVxdGDRQHGwETBgpRXVBfQBcXCBgVDwpAUkpGXU5AVxdBCBhRWl1IBRoYA05AVxdAGRwHHBw7BSIRCwsEKUxHExQGEUpAWVUSDg4WAAkAU0cHHBYeDkpGXVgLEElJTVBGWgYfDDASBg4AC0RIBFBGWlUcHgMYQ0dXV1ZXAlBGWlUcHgMYQ0dXV1VEFR1RWl1ITl1GQUxKSwsKT1tbAQIVGEADBgwBVgtPERJRWl1eTl1GGwsRCUAAU0dOTV1APxoGDQsLAAAXUTgVAQEGDgEVAQEAQBcXREIw" src="../../../imgs/wind3.jpg" style="margin-right: auto; margin-left: auto; position: static;" title="Turbine Maintenance" /></a>

<p><span style="color:#A52A2A"><strong>FIGURE&#160;5</strong></span>&#160; Turbine Maintenance</p>
</div>




</div>

<p>Maintaining proper <a class="kInteractive link link622" data-kotobee="Tlg2SlBXEVdEDwYECR0XBQwNSlBXXxAVTVBGWg0GBSwbAw0XQBcXW1BGWkxAXgpNClBAVxcJREdGHBYCDkpGXVhAVxdVDgUBGEpAWUNRXVAIFkIAU0dOTV1ATlw3H0dWIEhECBsRBg4cCApRXVIEC0EAU0UbGBsbBgYODhYMCksAU0UbDkpAWxgdAQZAVxVRFAcWAQEXTl1EHBsWEUBIElBHK0ACTlwxSlcmCwAXU1lRWl0CBB8BHy8KAUAAU0dOTV1AHwoMG0dXVwASJQ==" href=""><span style="color:#900D09"><strong>turbine care</strong></span></a><a class="kiAnchor" contenteditable="false" data-kotobee="Tlg2SlBXBklEEgYaCQIXTl1GVUdXV0RLAh0bGl1KW0pGXU5AVxdJCBsfDQsxAw4EGwcXLFZmCRwYDEpAWVUAHRcASQAXUxsVBQpXWV1OSlBXDkBcFhoGDEIGHh0WBgwAOkZEExBRWl1XXCs=" id="keyword-turbine_care" title="keyword-turbine_care">&#160;</a>is essential for ensuring optimal performance and longevity in the world of energy production. Whether it's a wind turbine harnessing the power of the breeze or a steam turbine driving electricity generation, regular maintenance is the key to preventing wear and tear. Diligent turbine care involves routine inspections, lubrication of crucial components, and timely repairs to address any potential issues. By prioritizing turbine care, we not only maximize efficiency but also contribute to the sustainability of our energy sources, harnessing power with precision and responsibility.</p>

<p>In conclusion, wind energy stands as a cornerstone in the pursuit of a cleaner and more sustainable energy mix. With its inherent environmental advantages, continuous technological advancements, and increasing affordability, wind power plays a crucial role in mitigating climate change and securing a greener future for generations to come. As we navigate the complexities of energy transition, the wind will likely continue to be a driving force, propelling us towards a more sustainable and resilient global energy landscape.</p>

<p>&#160;</p>

<p>&#160;</p>

<div class="kInteractive questions questions69" data-kotobee="" dir="ltr" id="ki-qs-1003" style="color: rgb(51, 51, 51); padding: 5px; font-size: 1em;"></div>

<div class="kInteractive container container630" data-kotobee="Tlg2SlBXFldGREdGUkpAWUpGXU5AVxdDDRoVHEpAWVVRXVALCktAREdGREpAWRsNHwdAVxcfREdGCyoKGw4aC0dXVwkAU0cZCR0VAgFRXVBfUAkAU0cECQsWAgETSlBXXxQVTVBGWg0dGQsRHTAEAUxQElBGWlVBR0pGXQAKF0FAEyIdDBsaTl1GVUdXVxUAU0dYTV1ACQAGCwcXJkpJDgdRWl1ITl1GTAMEBEREAFBGWkNXWV0WCCEKCUpXREdGUkpAWUwSCQQDA0MAU0dYTV1ACQg7HwMGDFFcREdGUl5eTl1GDA0JClcAU0dOTV1ASFxHXFFWVgAXU1lRWl0WAhwVDQ4AMldEETMbGiIdCQYYCkdXVx9REwARREpAWQsdAkdXVx9LFBkYREpAWQwYDhEWC0RIBFBGWlVXWV0XAAwRBExLBAdCW19XWV1RWCY=" style="color: rgb(51, 51, 51); width: 100%; height: auto; margin: 5px auto; clear: both; padding: 0px; border-radius: 3px; border-width: 0px; border-color: rgb(170, 170, 170); background-color: rgb(255, 255, 255);">
<div class="kbContent" style="padding: 10px;">
<p>&#160;</p>
</div>




</div>


</body></html>